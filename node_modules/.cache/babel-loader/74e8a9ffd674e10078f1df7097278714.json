{"remainingRequest":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/fields/fieldSwitch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/fields/fieldSwitch.vue","mtime":1576581289804},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js","mtime":1575878134225},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js","mtime":1576575752870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgU3dpdGNoIGFzIGlTd2l0Y2ggfSBmcm9tICdpdmlldyc7CmltcG9ydCBnZXRPcHRpb25zIGZyb20gJy4uL21peGlucy9nZXRPcHRpb25zJzsKaW1wb3J0IHsgY2xhc3NQcmlmaXggfSBmcm9tICcuLi91dGlscy9jb25zdCc7CmV4cG9ydCBkZWZhdWx0IHsKICBpbmplY3Q6IFsnZm9ybSddLAogIGNvbXBvbmVudHM6IHsKICAgIGlTd2l0Y2g6IGlTd2l0Y2gKICB9LAogIG1peGluczogW2dldE9wdGlvbnNdLAogIHByb3BzOiB7CiAgICBmaWVsZDogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgc2l6ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiAnZGVmYXVsdCc7CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICB0cnVlVmFsdWU6IGZ1bmN0aW9uIHRydWVWYWx1ZSgpIHsKICAgICAgdmFyIGluZm8gPSB0aGlzLmZpZWxkLnRydWU7CgogICAgICBpZiAoIWluZm8gfHwgaW5mbyAmJiBpbmZvLnZhbHVlID09PSB1bmRlZmluZWQpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gaW5mby52YWx1ZTsKICAgICAgfQogICAgfSwKICAgIGZhbHNlVmFsdWU6IGZ1bmN0aW9uIGZhbHNlVmFsdWUoKSB7CiAgICAgIHZhciBpbmZvID0gdGhpcy5maWVsZC5mYWxzZTsKCiAgICAgIGlmICghaW5mbyB8fCBpbmZvICYmIGluZm8udmFsdWUgPT09IHVuZGVmaW5lZCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gaW5mby52YWx1ZTsKICAgICAgfQogICAgfSwKICAgIGNsYXNzZXM6IGZ1bmN0aW9uIGNsYXNzZXMoKSB7CiAgICAgIHJldHVybiAiIi5jb25jYXQoY2xhc3NQcmlmaXgsICItIikuY29uY2F0KHRoaXMuZmllbGQudHlwZS50b0xvd2VyQ2FzZSgpKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUNoYW5nZTogZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKHZhbHVlKSB7CiAgICAgIHRoaXMuJHNldCh0aGlzLmZvcm0ubW9kZWwsIHRoaXMuZmllbGQubW9kZWwsIHZhbHVlKTsKICAgICAgdGhpcy4kZW1pdCgnb24tY2hhbmdlJywgdGhpcy5maWVsZC5tb2RlbCwgdmFsdWUsIG51bGwsIHRoaXMuZmllbGQpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["fieldSwitch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA,SAAA,MAAA,IAAA,OAAA,QAAA,OAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,SAAA,WAAA,QAAA,gBAAA;AACA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAFA;AAKA,EAAA,MAAA,EAAA,CAAA,UAAA,CALA;AAMA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,SAAA;AACA;AAJA;AALA,GANA;AAkBA,EAAA,IAlBA,kBAkBA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GAtBA;AAuBA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA;;AACA,UAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,CAAA,KAAA,KAAA,SAAA,EAAA;AACA,eAAA,IAAA;AACA,OAFA,MAGA;AACA,eAAA,IAAA,CAAA,KAAA;AACA;AACA,KATA;AAUA,IAAA,UAVA,wBAUA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,KAAA;;AACA,UAAA,CAAA,IAAA,IAAA,IAAA,IAAA,IAAA,CAAA,KAAA,KAAA,SAAA,EAAA;AACA,eAAA,KAAA;AACA,OAFA,MAGA;AACA,eAAA,IAAA,CAAA,KAAA;AACA;AACA,KAlBA;AAmBA,IAAA,OAnBA,qBAmBA;AACA,uBAAA,WAAA,cAAA,KAAA,KAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AACA;AArBA,GAvBA;AA8CA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AACA,WAAA,IAAA,CAAA,KAAA,IAAA,CAAA,KAAA,EAAA,KAAA,KAAA,CAAA,KAAA,EAAA,KAAA;AACA,WAAA,KAAA,CAAA,WAAA,EAAA,KAAA,KAAA,CAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,KAAA;AACA;AAJA;AA9CA,CAAA","sourcesContent":["<template>\n    <i-switch\n        :value=\"form.model[field.model]\"\n        :true-value=\"trueValue\"\n        :false-value=\"falseValue\"\n        :disabled=\"field.disabled\"\n        :class=\"classes\"\n        :size=\"size\"\n        @on-change=\"handleChange\"\n    >\n        <span v-if=\"field.true && field.true.label\" slot=\"open\">{{ field.true.label }}</span>\n        <Icon v-else-if=\"field.true && field.true.icon\" slot=\"open\" :type=\"field.true.icon\" />\n\n        <span v-if=\"field.false && field.false.label\" slot=\"close\">{{ field.false.label }}</span>\n        <Icon v-else-if=\"field.false && field.false.icon\" slot=\"close\" :type=\"field.false.icon\" />\n    </i-switch>\n</template>\n<script>\nimport {Switch as iSwitch} from 'iview';\nimport getOptions from '../mixins/getOptions';\nimport {classPrifix} from '../utils/const';\nexport default {\n    inject: ['form'],\n    components: {\n        iSwitch\n    },\n    mixins: [getOptions],\n    props: {\n        field: {\n            type: Object,\n            required: true\n        },\n        size: {\n            type: String,\n            default() {\n                return 'default';\n            }\n        },\n    },\n    data() {\n        return {\n            loading: false\n        };\n    },\n    computed: {\n        trueValue() {\n            let info = this.field.true;\n            if (!info || info && info.value  === undefined) {\n                return true;\n            }\n            else {\n                return info.value;\n            }\n        },\n        falseValue() {\n            let info = this.field.false;\n            if (!info || info && info.value  === undefined) {\n                return false;\n            }\n            else {\n                return info.value;\n            }\n        },\n        classes() {\n            return `${classPrifix}-${this.field.type.toLowerCase()}`;\n        }\n    },\n    methods: {\n        handleChange(value) {\n            this.$set(this.form.model, this.field.model, value);\n            this.$emit('on-change', this.field.model, value, null, this.field);\n        }\n    }\n};\n</script>\n"],"sourceRoot":"node_modules/form-generator-iview/src/fields"}]}