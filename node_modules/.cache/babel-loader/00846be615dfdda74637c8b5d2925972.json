{"remainingRequest":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/thread-loader/dist/cjs.js!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/github/glsnb/glsblc/glsblc/src/store/module/app.js","dependencies":[{"path":"/Users/apple/github/glsnb/glsblc/glsblc/src/store/module/app.js","mtime":1576581821241},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/thread-loader/dist/cjs.js","mtime":1575878146703},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js","mtime":1575878134225},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/eslint-loader/index.js","mtime":1575878144640}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CgovKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqLwppbXBvcnQgc2VydmljZXMgZnJvbSAiQC9zZXJ2aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiB7CiAgICBtZW51TGlzdDogW10sCiAgICBicmVhZENydW1iTGlzdDogW10KICB9LAogIG11dGF0aW9uczogewogICAgc2V0TWVudUxpc3Q6IGZ1bmN0aW9uIHNldE1lbnVMaXN0KHN0YXRlLCBtZW51TGlzdCkgewogICAgICBzdGF0ZS5tZW51TGlzdCA9IG1lbnVMaXN0OwogICAgfSwKICAgIGJyZWFkQ3J1bWJMaXN0OiBmdW5jdGlvbiBicmVhZENydW1iTGlzdChzdGF0ZSwgX2JyZWFkQ3J1bWJMaXN0KSB7CiAgICAgIHN0YXRlLmJyZWFkQ3J1bWJMaXN0ID0gX2JyZWFkQ3J1bWJMaXN0OwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgZ2V0TWVudUxpc3Q6IGZ1bmN0aW9uIGdldE1lbnVMaXN0KF9yZWYpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHRyeSB7CiAgICAgICAgICBzZXJ2aWNlcy5nZXRNZW51TGlzdCgpLnRoZW4oZnVuY3Rpb24gKF9yZWYyKSB7CiAgICAgICAgICAgIHZhciBzdGF0dXMgPSBfcmVmMi5zdGF0dXMsCiAgICAgICAgICAgICAgICBkYXRhID0gX3JlZjIuZGF0YTsKCiAgICAgICAgICAgIGlmICgrc3RhdHVzID09PSAyMDAgfHwgK3N0YXR1cyA9PT0gMCkgewogICAgICAgICAgICAgIGNvbW1pdCgic2V0TWVudUxpc3QiLCBkYXRhKTsKICAgICAgICAgICAgICByZXNvbHZlKGRhdGEpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoInJlc3BvbnNlIHN0YXR1cyBpczogIi5jb25jYXQoc3RhdHVzKSkpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICAgIHJlamVjdChlcnIpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/apple/github/glsnb/glsblc/glsblc/src/store/module/app.js"],"names":["services","state","menuList","breadCrumbList","mutations","setMenuList","actions","getMenuList","commit","Promise","resolve","reject","then","status","data","Error","catch","err","error"],"mappings":";;AAAA;AACA,OAAOA,QAAP,MAAqB,WAArB;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,cAAc,EAAE;AAFX,GADM;AAKbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACGJ,KADH,EACUC,QADV,EACoB;AAC3BD,MAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACD,KAHQ;AAKTC,IAAAA,cALS,0BAKMF,KALN,EAKaE,eALb,EAK6B;AACpCF,MAAAA,KAAK,CAACE,cAAN,GAAuBA,eAAvB;AACD;AAPQ,GALE;AAcbG,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,6BACiB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACtB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAI;AACFX,UAAAA,QAAQ,CACLO,WADH,GAEGK,IAFH,CAEQ,iBAAsB;AAAA,gBAAnBC,MAAmB,SAAnBA,MAAmB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;;AAC1B,gBAAI,CAACD,MAAD,KAAY,GAAZ,IAAmB,CAACA,MAAD,KAAY,CAAnC,EAAsC;AACpCL,cAAAA,MAAM,CAAC,aAAD,EAAgBM,IAAhB,CAAN;AACAJ,cAAAA,OAAO,CAACI,IAAD,CAAP;AACD,aAHD,MAGO;AACLH,cAAAA,MAAM,CAAC,IAAII,KAAJ,+BAAiCF,MAAjC,EAAD,CAAN;AACD;AACF,WATH,EAUGG,KAVH,CAUS,UAAAC,GAAG,EAAI;AACZN,YAAAA,MAAM,CAACM,GAAD,CAAN;AACD,WAZH;AAaD,SAdD,CAcE,OAAOC,KAAP,EAAc;AACdP,UAAAA,MAAM,CAACO,KAAD,CAAN;AACD;AACF,OAlBM,CAAP;AAmBD;AArBM;AAdI,CAAf","sourcesContent":["/* eslint-disable no-param-reassign */\nimport services from \"@/service\";\n\nexport default {\n  state: {\n    menuList: [],\n    breadCrumbList: []\n  },\n  mutations: {\n    setMenuList(state, menuList) {\n      state.menuList = menuList;\n    },\n\n    breadCrumbList(state, breadCrumbList) {\n      state.breadCrumbList = breadCrumbList;\n    }\n  },\n  actions: {\n    getMenuList({ commit }) {\n      return new Promise((resolve, reject) => {\n        try {\n          services\n            .getMenuList()\n            .then(({ status, data }) => {\n              if (+status === 200 || +status === 0) {\n                commit(\"setMenuList\", data);\n                resolve(data);\n              } else {\n                reject(new Error(`response status is: ${status}`));\n              }\n            })\n            .catch(err => {\n              reject(err);\n            });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n  }\n};\n"]}]}