{"remainingRequest":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/data-vis-iview/src/charts/chartTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/data-vis-iview/src/charts/chartTable.vue","mtime":1576069822427},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js","mtime":1575878134225},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js","mtime":1576575752870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["chartTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div\n        v-if=\"loading\"\n        :class=\"[loadingClasses, classes]\"\n    >\n        <Spin\n            :class=\"spinClasses\"\n            size=\"large\"\n        />\n    </div>\n    <div\n        v-else\n        :class=\"classes\"\n    >\n        <h3 :class=\"headerClasses\">\n            <Button\n                v-if=\"customColumns.length > 0\"\n                size=\"small\"\n                type=\"primary\"\n                @click=\"handleCustomColumnsClick\"\n            >\n                自定义列\n            </Button>\n            <Button\n                v-if=\"downloadAble\"\n                size=\"small\"\n                type=\"primary\"\n                @click=\"handleDownloadClick\"\n            >\n                下载数据\n            </Button>\n        </h3>\n        <Table\n            ref=\"table\"\n            stripe\n            size=\"small\"\n            :class=\"contentClasses\"\n            :columns=\"displayColumns\"\n            :data=\"displayData\"\n            :loading=\"loading\"\n            @on-sort-change=\"handleSortChange\"\n        />\n        <Page\n            :current=\"pageNum\"\n            :class=\"pageClasses\"\n            :page-size=\"pageSize\"\n            :page-size-opts=\"[10, 20, 30, 40]\"\n            :total=\"total\"\n            :show-elevator=\"showElevator\"\n            :show-sizer=\"showSizer\"\n            show-total\n            size=\"small\"\n            @on-change=\"handlePageChange\"\n            @on-page-size-change=\"handlePageSizeChange\"\n        />\n        <Modal\n            v-if=\"customColumns.length > 0\"\n            v-model=\"showModal\"\n            title=\"请选择要展示的列\"\n            footer-hide\n        >\n            <CheckboxGroup\n                :value=\"selectedCustomColumns\"\n                @on-change=\"handleCustomColumnsChange\"\n            >\n                <Checkbox\n                    v-for=\"option in customColumnsOptions\"\n                    :key=\"option.key\"\n                    :label=\"option.key\"\n                >\n                    {{ option.title }}\n                </Checkbox>\n            </CheckboxGroup>\n        </Modal>\n    </div>\n</template>\n<script>\nimport dataGetter from '../mixins/dataGetter';\nimport {classPrifix} from '../utils/const';\nimport {xlsDownload} from '../utils/download';\nimport {addCommas, isNumber, calculateTableCellWidth} from '../utils/utils';\nimport expandRow from './expandRow.vue';\nexport default {\n    name: 'ChartTable',\n    mixins: [dataGetter],\n    props: {\n        chart: {\n            type: Object,\n            default() {\n                return {};\n            }\n        }\n    },\n\n    data () {\n        return {\n            chartData: [],\n            chartColumns: [],\n            // maxWidth: 100,\n            showModal: false,\n            selectedCustomColumns: [],\n            remoteTotal: 0,\n            pageSize: 10,\n            pageNum: 1,\n            loading: false,\n            elWidth: 0,\n            sort: {},\n            remotePage: {\n                pageSize: 10,\n                pageNum: 1\n            }\n        };\n    },\n    computed: {\n        classes() {\n            return [\n                `${classPrifix}-chart`,\n                `${classPrifix}-chart-table`\n            ];\n        },\n        headerClasses() {\n            return `${classPrifix}-chart-table-header`;\n        },\n        contentClasses() {\n            return `${classPrifix}-chart-table-content`;\n        },\n        pageClasses() {\n            return `${classPrifix}-chart-table-page`;\n        },\n        showSizer() {\n            return this.chart.hideSizer === undefined ? true : !this.chart.hideSizer;\n        },\n        showElevator() {\n            return this.chart.hideElevator === undefined ? true : !this.chart.hideElevator;\n        },\n        downloadAble() {\n            if (this.chart.downloadAble === undefined) {\n                return true;\n            }\n            return this.chart.downloadAble;\n        },\n        columns() {\n            let chartColumns = this.chartColumns || [];\n            let columns = this.chart.columns || [];\n            return chartColumns.length > 0 ? chartColumns : columns;\n        },\n        data() {\n            let data = this.chart.api ? this.chartData : this.chart.data;\n            let sort = this.sort || {};\n            if (sort.key) {\n                let {key, order} = sort;\n                data = data.sort((a, b) => {\n                    if (order === 'desc') {\n                        return b[key] - a[key];\n                    }\n                    else if (order === 'asc') {\n                        return a[key] - b[key];\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n            }\n            return data;\n        },\n        total() {\n            if (this.remoteTotal) {\n                return this.remoteTotal;\n            }\n            return this.data.length;\n        },\n        queryParams () {\n            let params = {\n                ...this.remotePage\n            };\n            // let sort = this.sort;\n            // if (sort.key) {\n            //     params.sort = {\n            //         [sort.key]: sort.order\n            //     };\n            // }\n            return params;\n        },\n        isRemotePage() {\n            return this.remoteTotal > 0;\n        },\n        customColumns() {\n            return this.chart.customColumns || [];\n        },\n        customColumnsOptions() {\n            return this.columns.filter(item => this.customColumns.includes(item.key)) || [];\n        },\n        displayData() {\n            if (this.isRemotePage) {\n                return this.data;\n            }\n            return this.data.slice((this.pageNum - 1) * this.pageSize, (this.pageNum) * this.pageSize);\n        },\n        headerColumnsWidth() {\n            let widths = {};\n            this.columns.forEach(item => {\n                widths[item.key] = calculateTableCellWidth(item.title);\n            });\n            return widths;\n        },\n        columnsWidth() {\n            let widths = this.headerColumnsWidth || {};\n            this.displayData.forEach((item = {}) => {\n                Object.keys(item).forEach(fieldName => {\n                    if (!widths[fieldName]) {\n                        widths[fieldName] = 80;\n                    }\n                    const width = calculateTableCellWidth(item[fieldName]);\n                    widths[fieldName] = Math.max(widths[fieldName], width);\n                });\n            });\n            return widths;\n        },\n        isExpand() {\n            return this.displayData.find(item => {\n                if (!Array.isArray(item.children)) {\n                    return false;\n                }\n                return item.children.length > 0;\n            });\n        },\n        displayColumns() {\n            let selectedCustomColumns = this.selectedCustomColumns;\n            let customColumns = this.customColumns;\n            let columns = this.columns.filter(\n                item => !customColumns.includes(item.key)\n                || selectedCustomColumns.includes(item.key)\n            ).slice();\n            let columnsWidth = this.columnsWidth || {};\n            let expandWidth = this.isExpand ? 30 : 0;\n            let totalWidth = columns.map(item => columnsWidth[item.key]).reduce(function(prev,cur){\n                return prev + cur;\n            },0) + expandWidth;\n\n            let sort = this.sort || {};\n\n            columns = columns.map(item => {\n                if (item.type === 'expand') {\n                    return item;\n                }\n                item.width = this.elWidth < totalWidth\n                    ? columnsWidth[item.key]\n                    : (this.elWidth / Object.keys(columnsWidth).length) < columnsWidth[item.key] ? columnsWidth[item.key] : 'auto';\n                // 如果是远程排序，则需要展示排序信息\n                if (sort.key && sort.key === item.key) {\n                    item.sortType = sort.order || 'normal';\n                }\n                else {\n                    item.sortType = 'normal';\n                }\n                item.render = (h, params) => {\n                    const key = params.column.key;\n                    let value = params.row[key];\n                    let text = value;\n                    // 如果是整数\n                    if (isNumber(value)) {\n                        text = addCommas(value.toString());\n                    }\n\n                    // 如果有单位\n                    if (item.unit) {\n                        text = text + '' + params.column.unit;\n                    }\n\n                    // 如果为null, 则显示 '-', 不加单位\n                    if (value === null) {\n                        text = '-';\n                    }\n                    return h('span', {}, text);\n                };\n                return item;\n            });\n\n\n            // 增加扩展列\n            if (this.isExpand) {\n                columns.unshift({\n                    width: expandWidth,\n                    type: 'expand',\n                    render: (h, params) => {\n                        return h(expandRow, {\n                            props: {\n                                row: params.row,\n                                data: params.row.children,\n                                columns: columns.slice()\n                            }\n                        });\n                    }\n                });\n            }\n            return columns;\n        },\n    },\n\n    watch: {\n        chartColumns(val) {\n            if (val.length === 0) {\n                return;\n            }\n            this.selectedCustomColumns = this.columns.filter(item => item.defaultShow !== false).map(item => item.key);\n        }\n    },\n\n    mounted() {\n        this.elWidth = parseInt(window.getComputedStyle(this.$el).width);\n        this.selectedCustomColumns = this.columns.filter(item => item.defaultShow !== false).map(item => item.key);\n        this.$watch('chart', () => {\n            this.$nextTick(() => {\n                this.chartData = [];\n                this.chartColumns = [];\n                this.remoteTotal = 0;\n            });\n        });\n    },\n    methods: {\n        getDataFinished() {},\n        handleCustomColumnsClick() {\n            this.showModal = true;\n        },\n        handlePageChange(pageNum) {\n            this.pageNum = pageNum;\n            if (this.isRemotePage) {\n                this.remotePage = {\n                    ...this.remotePage,\n                    pageNum\n                };\n            }\n        },\n        handlePageSizeChange(pageSize) {\n            this.pageSize = pageSize;\n            if (this.isRemotePage) {\n                this.page = {\n                    ...this.page,\n                    pageSize\n                };\n            }\n        },\n        handleDownloadClick() {\n            if (this.chart.downLoadApi) {\n                window.open(this.chart.downLoadApi);\n            }\n            else {\n                // download local data\n                const header = this.columns.map(item => item.title);\n                const data = [\n                    header,\n                    ...this.data.map(item => {\n                        return this.columns.map(field => item[field.key]);\n                    })\n                ];\n                xlsDownload(data, this.chart.label);\n            }\n        },\n        handleSortChange({key, order}) {\n            this.sort = {\n                key,\n                order\n            };\n        },\n\n        handleCustomColumnsChange(val) {\n            this.selectedCustomColumns = val;\n        }\n    }\n};\n</script>\n"],"sourceRoot":"node_modules/data-vis-iview/src/charts"}]}