{"remainingRequest":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/fieldGenerator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/fieldGenerator.vue","mtime":1576581289804},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js","mtime":1575878134225},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js","mtime":1576575752870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["fieldGenerator.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div\n        v-if=\"notFormfield && show\"\n        :class=\"itemClasses\"\n        :style=\"itemStyle\"\n    >\n        <component\n            :is=\"getFieldCom(field.type)\"\n            :class=\"classes\"\n            :field=\"field\"\n            :inline=\"inline\"\n            :size=\"field.size || size\"\n        />\n    </div>\n    <FormItem\n        v-else-if=\"show\"\n        :label=\"field.label\"\n        :prop=\"field.model\"\n        :required=\"field.required\"\n        :rules=\"getRules(field)\"\n        :label-width=\"field.labelWidth\"\n        :class=\"itemClasses\"\n        :style=\"itemStyle\"\n    >\n        <component\n            :is=\"getFieldCom(field.type)\"\n            :class=\"classes\"\n            :field=\"field\"\n            :inline=\"inline\"\n            :api-base=\"apiBase\"\n            :size=\"field.size || size\"\n            :request-interceptor=\"requestInterceptor\"\n            @on-change=\"handleFieldChange\"\n            @on-submit-click=\"handleSubmitClick\"\n            @on-reset-click=\"handleResetClick\"\n            @on-button-click=\"handleButtonClick\"\n            @submit=\"handleSubmit\"\n        />\n    </FormItem>\n</template>\n<script>\nimport fieldComponents from './utils/fieldsLoader.js';\nimport {classPrifix} from './utils/const';\nimport {getValidType} from './utils/getValidType';\nimport schema from 'async-validator';\nconst notFormfields = ['Divider'];\nexport default {\n    inject: ['form'],\n    name: 'FieldGenerator',\n    components: {\n        ...fieldComponents\n    },\n    // filters: {\n    //     itemStyle(itemWidth, field) {\n    //         const width = field.width || itemWidth;\n    //         return {\n    //             width: '160px',\n    //             display:\n    //             // width: typeof width !== 'number' ? width + 'px' : width\n    //         };\n    //     }\n    // },\n    props: {\n        requestInterceptor: {\n            type: [Function, null],\n            default: null\n        },\n        field: {\n            type: Object,\n            required: true,\n            default() {\n                return [];\n            }\n        },\n        size: {\n            type: String,\n            default() {\n                return 'default';\n            }\n        },\n        inline: {\n            type: Boolean,\n            default: false\n        },\n        apiBase: {\n            type: String,\n            default: ''\n        },\n        itemWidth: {\n            type: [String, Number],\n            default: ''\n        }\n    },\n    computed: {\n        classes() {\n            return `${classPrifix}-${this.field.type.toLowerCase()}`;\n        },\n        itemClasses() {\n            return `${classPrifix}-form-item`;\n        },\n        notFormfield() {\n            return notFormfields.includes(this.field.type);\n        },\n        itemStyle() {\n            const inline = this.field.inline || this.inline;\n            const itemWidth = inline ? this.itemWidth : (this.itemWidth || '100%');\n            let width = this.field.width || itemWidth;\n            // 兼容老版本的字符串数值，如果是数值字符串，则转为int\n            if (typeof width === 'string' && /^\\d+$/.test(width)) {\n                width = parseInt(width);\n            }\n            return {\n                width: typeof width === 'string' ? width : width + 'px',\n                display: inline ? 'inline-block' : 'block'\n                // width: typeof width !== 'number' ? width + 'px' : width\n            };\n        },\n        show() {\n            const field = this.field;\n            const model = this.form.model;\n            let show = true;\n            if (field.hiddenOn) {\n                let descriptor = field.hiddenOn;\n                let validator = new schema(descriptor);\n                validator.validate(model, (errors) => {\n                    if(!errors) {\n                        show = false;\n                    }\n                });\n            }\n            if (field.showOn) {\n                let descriptor = field.showOn;\n                let validator = new schema(descriptor);\n                validator.validate(model, (errors) => {\n                    if(errors) {\n                        show = false;\n                    }\n                });\n            }\n            // console.log(field.model, valid, model);\n            return show;\n        }\n    },\n    created() {\n        let field = this.field;\n        // 老版本兼容\n        if (field.subType) {\n            field.subtype = field.subType;\n        }\n        return field;\n    },\n    methods: {\n        handleFieldChange(model, value) {\n            this.$emit('on-field-change', model, value);\n        },\n        handleSubmitClick() {\n            this.$emit('on-submit');\n        },\n        handleResetClick() {\n            this.$emit('on-reset');\n        },\n        handleButtonClick($event) {\n            this.$emit('on-button-event', $event);\n        },\n        getFieldCom(comType = '') {\n            return `field${comType}`;\n        },\n        handleSubmit() {\n            this.$emit('on-submit');\n        },\n        getRules(field) {\n            const type = field.type.toLowerCase();\n            const subtype = field.subtype;\n            let rules = [];\n            if (field.required) {\n                if (type === 'datepicker' && ['daterange', 'datetimerange'].includes(subtype)) {\n                    rules.push({\n                        validator(rule, value, callback) {\n                            if (value.length === 2 && value[0] && value[1]) {\n                                callback();\n                            }\n                            else {\n                                callback(new Error(field.label + '不可为空'));\n                            }\n                        },\n                        trigger: 'change'\n                    });\n                }\n                if (type === 'logicinput') {\n                    rules.push({\n                        validator(rule, value, callback) {\n                            if (value.logic && value.value) {\n                                callback();\n                            }\n                            else {\n                                callback(new Error(field.label + '不可为空'));\n                            }\n                        },\n                        trigger: 'change'\n                    });\n                }\n                rules.push({\n                    required: true,\n                    type: getValidType(field),\n                    message: (field.label || field.model) + '不可为空',\n                    trigger: 'change'\n                });\n            }\n            if (field.rules) {\n                rules = rules.concat(field.rules);\n            }\n            return rules;\n        },\n    }\n};\n</script>\n"],"sourceRoot":"node_modules/form-generator-iview/src"}]}