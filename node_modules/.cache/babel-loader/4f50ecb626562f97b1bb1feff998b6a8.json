{"remainingRequest":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/thread-loader/dist/cjs.js!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/data-vis-iview/src/charts/chartRetain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/data-vis-iview/src/charts/chartRetain.vue","mtime":1576069822427},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/thread-loader/dist/cjs.js","mtime":1575878146703},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js","mtime":1575878134225},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js","mtime":1576575752870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["chartRetain.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div\n        v-if=\"loading\"\n        :class=\"[loadingClasses, classes]\"\n    >\n        <Spin\n            :class=\"spinClasses\"\n            size=\"large\"\n        />\n    </div>\n    <div\n        v-else\n        :class=\"classes\"\n    >\n        <h3 :class=\"headerClasses\">\n            <Button\n                v-if=\"downloadAble\"\n                size=\"small\"\n                type=\"primary\"\n                @click=\"handleDownloadClick\"\n            >\n                下载数据\n            </Button>\n        </h3>\n        <Table\n            ref=\"table\"\n            stripe\n            size=\"small\"\n            :class=\"contentClasses\"\n            :columns=\"displayColumns\"\n            :data=\"displayData\"\n            :loading=\"loading\"\n        />\n        <Page\n            v-if=\"pageNum > 1\"\n            :current=\"pageNum\"\n            :class=\"pageClasses\"\n            :page-size=\"pageSize\"\n            :page-size-opts=\"[10, 20, 30, 40]\"\n            :total=\"total\"\n            show-total\n            size=\"small\"\n            @on-change=\"handlePageChange\"\n            @on-page-size-change=\"handlePageSizeChange\"\n        />\n    </div>\n</template>\n<script>\nimport dataGetter from '../mixins/dataGetter';\nimport {classPrifix} from '../utils/const';\nimport {xlsDownload} from '../utils/download';\nimport {addCommas, isNumber, calculateTableCellWidth} from '../utils/utils';\nexport default {\n    name: 'ChartRetain',\n    mixins: [dataGetter],\n    props: {\n        chart: {\n            type: Object,\n            default() {\n                return {};\n            }\n        }\n    },\n\n    data () {\n        return {\n            chartData: [],\n            chartColumns: [],\n            pageSize: 1000,\n            pageNum: 1,\n            loading: false,\n            elWidth: 0\n        };\n    },\n    computed: {\n        classes() {\n            return [\n                `${classPrifix}-chart`,\n                `${classPrifix}-chart-retain`\n            ];\n        },\n        headerClasses() {\n            return `${classPrifix}-chart-retain-header`;\n        },\n        contentClasses() {\n            return `${classPrifix}-chart-retain-content`;\n        },\n        pageClasses() {\n            return `${classPrifix}-chart-retain-page`;\n        },\n        downloadAble() {\n            if (this.chart.downloadAble === undefined) {\n                return true;\n            }\n            return this.chart.downloadAble;\n        },\n        columns() {\n            let chartColumns = this.chartColumns || [];\n            let columns = this.chart.columns || [];\n            return chartColumns.length > 0 ? chartColumns : columns;\n        },\n        data() {\n            return this.chart.api ? this.chartData : this.chart.data;\n        },\n        total() {\n            return this.data.length;\n        },\n        displayColumns() {\n            let columns = this.columns || [];\n            let columnsWidth = this.columnsWidth || {};\n            let expandWidth = this.isExpand ? 30 : 0;\n            let totalWidth = columns.map(item => columnsWidth[item.key]).reduce(function(prev,cur){\n                return prev + cur;\n            },0) + expandWidth;\n            return columns.map((item, index) => {\n                if (item.type === 'expand') {\n                    return item;\n                }\n                item.width = this.elWidth < totalWidth\n                    ? columnsWidth[item.key]\n                    : (this.elWidth / Object.keys(columnsWidth).length) < columnsWidth[item.key] ? columnsWidth[item.key] : 'auto';\n                item.render = (h, params) => {\n                    const key = params.column.key;\n                    let value = params.row[key];\n                    let text = value;\n                    let className = '';\n                    if (index === 1 && isNumber(value)) {\n                        // 如果是整数\n                        text = addCommas(value.toString());\n                    }\n                    if (index > 1) {\n                        // 颜色\n                        let grade = Math.floor(value / 10);\n                        className = [\n                            `${classPrifix}-chart-retain-color`,\n                            {\n                                [`${classPrifix}-chart-retain-color-${grade}`]: grade >= 0 && grade <= 10,\n                                [`${classPrifix}-chart-retain-color-error`]: grade < 0 && grade > 10\n                            }\n                        ];\n                        // 单位\n                        if (typeof text === 'number') {\n                            text = text + '%';\n                        }\n                    }\n                    return h('div', {\n                        class: className\n                    }, text);\n                };\n                item.ellipsis = true;\n                item.tooltip = true;\n                item.align = 'center';\n                return item;\n            });\n        },\n        displayData() {\n            if (this.isRemotePage) {\n                return this.data;\n            }\n            return this.data.slice((this.pageNum - 1) * this.pageSize, (this.pageNum) * this.pageSize);\n        },\n        headerColumnsWidth() {\n            let widths = {};\n            this.columns.forEach(item => {\n                widths[item.key] = calculateTableCellWidth(item.title);\n            });\n            return widths;\n        },\n        columnsWidth() {\n            let widths = this.headerColumnsWidth || {};\n            this.displayData.forEach((item = {}) => {\n                Object.keys(item).forEach(fieldName => {\n                    if (!widths[fieldName]) {\n                        widths[fieldName] = 80;\n                    }\n                    const width = calculateTableCellWidth(item[fieldName]);\n                    widths[fieldName] = Math.max(widths[fieldName], width);\n                });\n            });\n            return widths;\n        },\n    },\n\n    mounted() {\n        this.elWidth = parseInt(window.getComputedStyle(this.$el).width);\n        this.$watch('chart', () => {\n            this.$nextTick(() => {\n                this.chartData = [];\n                this.chartColumns = [];\n            });\n        });\n    },\n    methods: {\n        getDataFinished() {},\n        handlePageChange(pageNum) {\n            this.pageNum = pageNum;\n        },\n        handlePageSizeChange(pageSize) {\n            this.pageSize = pageSize;\n        },\n        handleDownloadClick() {\n            if (this.chart.downLoadApi) {\n                window.open(this.chart.downLoadApi);\n            }\n            else {\n                // download local data\n                const header = this.columns.map(item => item.title);\n                const data = [\n                    header,\n                    ...this.data.map(item => {\n                        return this.columns.map(field => item[field.key]);\n                    })\n                ];\n                xlsDownload(data, this.chart.label);\n            }\n        }\n    }\n};\n</script>\n"],"sourceRoot":"node_modules/data-vis-iview/src/charts"}]}