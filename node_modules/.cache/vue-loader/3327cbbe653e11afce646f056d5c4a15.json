{"remainingRequest":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/fields/fieldSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/fields/fieldSelect.vue","mtime":1576581289804},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js","mtime":1575878134225},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js","mtime":1576575752870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBnZXRPcHRpb25zIGZyb20gJy4uL21peGlucy9nZXRPcHRpb25zJzsKZXhwb3J0IGRlZmF1bHQgewogICAgaW5qZWN0OiBbJ2Zvcm0nXSwKICAgIG1peGluczogW2dldE9wdGlvbnNdLAogICAgcHJvcHM6IHsKICAgICAgICBmaWVsZDogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgfSwKICAgICAgICBzaXplOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnZGVmYXVsdCc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgICAgICAgIG9wdGlvbnM6IFtdCiAgICAgICAgfTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIHJlbW90ZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmllbGQucmVtb3RlICYmICEhdGhpcy5vcHRpb25zQXBpOwogICAgICAgIH0sCiAgICAgICAgZmlsdGVyYWJsZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmllbGQuZmlsdGVyYWJsZSB8fCB0aGlzLnJlbW90ZTsKICAgICAgICB9LAogICAgICAgIGNsZWFyYWJsZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmllbGQuY2xlYXJhYmxlID09PSB1bmRlZmluZWQKICAgICAgICAgICAgICAgID8gdGhpcy5maWVsZC5yZXF1aXJlZCA/IGZhbHNlIDogdHJ1ZQogICAgICAgICAgICAgICAgOiB0aGlzLmZpZWxkLmNsZWFyYWJsZTsKICAgICAgICB9LAogICAgICAgIGNvbXB1dGVkT3B0aW9ucygpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5sZW5ndGggPiAwID8gdGhpcy5vcHRpb25zIDogKEFycmF5LmlzQXJyYXkodGhpcy5maWVsZC5vcHRpb25zKSA/IHRoaXMuZmllbGQub3B0aW9ucyA6IFtdKTsKICAgICAgICB9LAogICAgICAgIG9wdGlvbnNBcGkoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpZWxkLmFwaSB8fCAhQXJyYXkuaXNBcnJheSh0aGlzLmZpZWxkLm9wdGlvbnMpID8gdGhpcy5maWVsZC5vcHRpb25zIDogJyc7CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBoYW5kbGVDaGFuZ2UodmFsdWUpIHsKICAgICAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHsKICAgICAgICAgICAgICAgIHZhbHVlID0gJyc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMuZm9ybS5tb2RlbCwgdGhpcy5maWVsZC5tb2RlbCwgdmFsdWUpOwogICAgICAgICAgICB0aGlzLiRlbWl0KCdvbi1jaGFuZ2UnLCB0aGlzLmZpZWxkLm1vZGVsLCB2YWx1ZSwgbnVsbCwgdGhpcy5maWVsZCk7CiAgICAgICAgfSwKICAgICAgICByZW1vdGVNZXRob2QocXVlcnkpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLnJlbW90ZSkgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuZ2V0UmVtb3RlT3B0aW9ucygKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBbdGhpcy5maWVsZC5tb2RlbF06IHF1ZXJ5CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICk7CiAgICAgICAgfQogICAgfQp9Owo="},{"version":3,"sources":["fieldSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fieldSelect.vue","sourceRoot":"node_modules/form-generator-iview/src/fields","sourcesContent":["<template>\n    <div>\n        <Select\n            v-if=\"remote\"\n            :value=\"form.model[field.model]\"\n            :multiple=\"field.multiple || false\"\n            :disabled=\"field.disabled || false\"\n            :clearable=\"clearable\"\n            :size=\"size\"\n            :placeholder=\"field.placeholder\"\n            :remote=\"remote\"\n            :filterable=\"filterable || false\"\n            :loading=\"loading\"\n            :remote-method=\"remoteMethod\"\n            :prefix=\"field.prefix\"\n            @on-change=\"handleChange\"\n        >\n            <template v-for=\"item in computedOptions\">\n                <OptionGroup\n                    v-if=\"item.groupOptions\"\n                    :key=\"item.groupLabel\"\n                    :label=\"item.groupLabel\"\n                >\n                    <Option\n                        v-for=\"groupItem in item.groupOptions\"\n                        :key=\"groupItem.value\"\n                        :value=\"groupItem.value\"\n                    >{{ groupItem.label }}</Option>\n                </OptionGroup>\n                <Option\n                    v-else\n                    :key=\"item.value\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >{{ item.label }}</Option>\n            </template>\n        </Select>\n        <Select\n            v-else\n            :value=\"form.model[field.model]\"\n            :multiple=\"field.multiple || false\"\n            :disabled=\"field.disabled || false\"\n            :clearable=\"clearable\"\n            :size=\"size\"\n            :placeholder=\"field.placeholder\"\n            :filterable=\"filterable || false\"\n            :loading=\"loading\"\n            :prefix=\"field.prefix\"\n            @on-change=\"handleChange\"\n        >\n            <template v-for=\"item in computedOptions\">\n                <OptionGroup\n                    v-if=\"item.groupOptions\"\n                    :key=\"item.groupLabel\"\n                    :label=\"item.groupLabel\"\n                >\n                    <Option\n                        v-for=\"groupItem in item.groupOptions\"\n                        :key=\"groupItem.value\"\n                        :value=\"groupItem.value\"\n                    >{{ groupItem.label }}</Option>\n                </OptionGroup>\n                <Option\n                    v-else\n                    :key=\"item.value\"\n                    :value=\"item.value\"\n                    :disabled=\"item.disabled\"\n                >{{ item.label }}</Option>\n            </template>\n        </Select>\n    </div>\n</template>\n<script>\nimport getOptions from '../mixins/getOptions';\nexport default {\n    inject: ['form'],\n    mixins: [getOptions],\n    props: {\n        field: {\n            type: Object,\n            required: true\n        },\n        size: {\n            type: String,\n            default() {\n                return 'default';\n            }\n        },\n    },\n    data() {\n        return {\n            loading: false,\n            options: []\n        };\n    },\n    computed: {\n        remote() {\n            return this.field.remote && !!this.optionsApi;\n        },\n        filterable() {\n            return this.field.filterable || this.remote;\n        },\n        clearable() {\n            return this.field.clearable === undefined\n                ? this.field.required ? false : true\n                : this.field.clearable;\n        },\n        computedOptions() {\n            return this.options.length > 0 ? this.options : (Array.isArray(this.field.options) ? this.field.options : []);\n        },\n        optionsApi() {\n            return this.field.api || !Array.isArray(this.field.options) ? this.field.options : '';\n        }\n    },\n    methods: {\n        handleChange(value) {\n            if (value === undefined || value === null) {\n                value = '';\n            }\n            this.$set(this.form.model, this.field.model, value);\n            this.$emit('on-change', this.field.model, value, null, this.field);\n        },\n        remoteMethod(query) {\n            if (!this.remote) {\n                return;\n            }\n            this.getRemoteOptions(\n                {\n                    [this.field.model]: query\n                }\n            );\n        }\n    }\n};\n</script>\n"]}]}