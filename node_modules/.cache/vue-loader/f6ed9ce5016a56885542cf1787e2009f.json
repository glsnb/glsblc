{"remainingRequest":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/fields/fieldCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/fields/fieldCheckbox.vue","mtime":1576581289804},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/thread-loader/dist/cjs.js","mtime":1575878146703},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js","mtime":1575878134225},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js","mtime":1576575752870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBnZXRPcHRpb25zIGZyb20gJy4uL21peGlucy9nZXRPcHRpb25zJzsKaW1wb3J0IHtjbGFzc1ByaWZpeH0gZnJvbSAnLi4vdXRpbHMvY29uc3QnOwpleHBvcnQgZGVmYXVsdCB7CiAgICBpbmplY3Q6IFsnZm9ybSddLAogICAgbWl4aW5zOiBbZ2V0T3B0aW9uc10sCiAgICBwcm9wczogewogICAgICAgIGZpZWxkOiB7CiAgICAgICAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB9LAogICAgICAgIHNpemU6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0KCkgewogICAgICAgICAgICAgICAgcmV0dXJuICdkZWZhdWx0JzsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgICAgICAgb3B0aW9uczogW10sCiAgICAgICAgICAgIGluZGV0ZXJtaW5hdGU6IHRydWUsCiAgICAgICAgICAgIGNoZWNrQWxsOiBmYWxzZQogICAgICAgIH07CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBjbGFzc2VzKCkgewogICAgICAgICAgICByZXR1cm4gYCR7Y2xhc3NQcmlmaXh9LSR7dGhpcy5maWVsZC50eXBlLnRvTG93ZXJDYXNlKCl9YDsKICAgICAgICB9LAogICAgICAgIGNoZWNrQWxsQ2xhc3NlcygpIHsKICAgICAgICAgICAgcmV0dXJuIGAke3RoaXMuY2xhc3Nlc30tY2hlY2thbGxgOwogICAgICAgIH0sCiAgICAgICAgY29tcHV0ZWRPcHRpb25zKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zLmxlbmd0aCA+IDAgPyB0aGlzLm9wdGlvbnMgOiB0aGlzLmZpZWxkLm9wdGlvbnM7CiAgICAgICAgfSwKICAgICAgICBvcHRpb25zQXBpKCkgewogICAgICAgICAgICByZXR1cm4gIUFycmF5LmlzQXJyYXkodGhpcy5maWVsZC5vcHRpb25zKSA/IHRoaXMuZmllbGQub3B0aW9ucyA6ICcnOwogICAgICAgIH0sCiAgICAgICAgdmFsdWUoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmZvcm0ubW9kZWxbdGhpcy5maWVsZC5tb2RlbF0gfHwgW107CiAgICAgICAgfQogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgICAgdmFsdWUodmFsdWUgPSBbXSkgewogICAgICAgICAgICB0aGlzLmNoZWNrQWxsR3JvdXBDaGFuZ2UodmFsdWUpOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgcmVtb3RlTWV0aG9kKCkgewogICAgICAgICAgICBpZiAoIXRoaXMuZmllbGQuYXBpICYmICF0aGlzLm9wdGlvbnNBcGkpIHsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmdldFJlbW90ZU9wdGlvbnMoKTsKICAgICAgICB9LAogICAgICAgIGhhbmRsZUNoYW5nZSh2YWx1ZSkgewogICAgICAgICAgICBpZiAodGhpcy5maWVsZC5jaGVja0FsbCkgewogICAgICAgICAgICAgICAgdGhpcy5jaGVja0FsbEdyb3VwQ2hhbmdlKHZhbHVlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLiRzZXQodGhpcy5mb3JtLm1vZGVsLCB0aGlzLmZpZWxkLm1vZGVsLCB2YWx1ZSk7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ29uLWNoYW5nZScsIHRoaXMuZmllbGQubW9kZWwsIHZhbHVlLCBudWxsLCB0aGlzLmZpZWxkKTsKICAgICAgICB9LAogICAgICAgIGhhbmRsZUNoZWNrQWxsKCkgewogICAgICAgICAgICBsZXQgdmFsdWUgPSBbXTsKICAgICAgICAgICAgaWYgKHRoaXMuaW5kZXRlcm1pbmF0ZSkgewogICAgICAgICAgICAgICAgdGhpcy5jaGVja0FsbCA9IGZhbHNlOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5jaGVja0FsbCA9ICF0aGlzLmNoZWNrQWxsOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuaW5kZXRlcm1pbmF0ZSA9IGZhbHNlOwoKICAgICAgICAgICAgaWYgKHRoaXMuY2hlY2tBbGwpIHsKICAgICAgICAgICAgICAgIHZhbHVlID0gdGhpcy5jb21wdXRlZE9wdGlvbnMubWFwKG9wdGlvbiA9PiBvcHRpb24udmFsdWUpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdmFsdWUgPSBbXTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmhhbmRsZUNoYW5nZSh2YWx1ZSk7CiAgICAgICAgfSwKICAgICAgICBjaGVja0FsbEdyb3VwQ2hhbmdlKHZhbHVlKSB7CiAgICAgICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IHRoaXMuY29tcHV0ZWRPcHRpb25zLmxlbmd0aCkgewogICAgICAgICAgICAgICAgdGhpcy5pbmRldGVybWluYXRlID0gZmFsc2U7CiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrQWxsID0gdHJ1ZTsKICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICB0aGlzLmluZGV0ZXJtaW5hdGUgPSB0cnVlOwogICAgICAgICAgICAgICAgdGhpcy5jaGVja0FsbCA9IGZhbHNlOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5pbmRldGVybWluYXRlID0gZmFsc2U7CiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrQWxsID0gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn07Cg=="},{"version":3,"sources":["fieldCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fieldCheckbox.vue","sourceRoot":"node_modules/form-generator-iview/src/fields","sourcesContent":["<template>\n    <div>\n        <div\n            v-if=\"field.checkAll\"\n            :class=\"checkAllClasses\"\n        >\n            <Checkbox\n                :indeterminate=\"indeterminate\"\n                :value=\"checkAll\"\n                @click.prevent.native=\"handleCheckAll\"\n            >全选</Checkbox>\n        </div>\n        <CheckboxGroup\n            :value=\"form.model[field.model]\"\n            :size=\"size\"\n            @on-change=\"handleChange\"\n        >\n            <Checkbox\n                v-for=\"item in computedOptions\"\n                :key=\"item.value\"\n                :label=\"item.value\"\n                :disabled=\"item.disabled\"\n            >\n                {{ item.label }}\n            </Checkbox>\n        </CheckboxGroup>\n    </div>\n</template>\n<script>\nimport getOptions from '../mixins/getOptions';\nimport {classPrifix} from '../utils/const';\nexport default {\n    inject: ['form'],\n    mixins: [getOptions],\n    props: {\n        field: {\n            type: Object,\n            required: true\n        },\n        size: {\n            type: String,\n            default() {\n                return 'default';\n            }\n        },\n    },\n    data() {\n        return {\n            loading: false,\n            options: [],\n            indeterminate: true,\n            checkAll: false\n        };\n    },\n    computed: {\n        classes() {\n            return `${classPrifix}-${this.field.type.toLowerCase()}`;\n        },\n        checkAllClasses() {\n            return `${this.classes}-checkall`;\n        },\n        computedOptions() {\n            return this.options.length > 0 ? this.options : this.field.options;\n        },\n        optionsApi() {\n            return !Array.isArray(this.field.options) ? this.field.options : '';\n        },\n        value() {\n            return this.form.model[this.field.model] || [];\n        }\n    },\n    watch: {\n        value(value = []) {\n            this.checkAllGroupChange(value);\n        }\n    },\n    methods: {\n        remoteMethod() {\n            if (!this.field.api && !this.optionsApi) {\n                return;\n            }\n            this.getRemoteOptions();\n        },\n        handleChange(value) {\n            if (this.field.checkAll) {\n                this.checkAllGroupChange(value);\n            }\n            this.$set(this.form.model, this.field.model, value);\n            this.$emit('on-change', this.field.model, value, null, this.field);\n        },\n        handleCheckAll() {\n            let value = [];\n            if (this.indeterminate) {\n                this.checkAll = false;\n            } else {\n                this.checkAll = !this.checkAll;\n            }\n            this.indeterminate = false;\n\n            if (this.checkAll) {\n                value = this.computedOptions.map(option => option.value);\n            } else {\n                value = [];\n            }\n            this.handleChange(value);\n        },\n        checkAllGroupChange(value) {\n            if (value.length === this.computedOptions.length) {\n                this.indeterminate = false;\n                this.checkAll = true;\n            } else if (value.length > 0) {\n                this.indeterminate = true;\n                this.checkAll = false;\n            } else {\n                this.indeterminate = false;\n                this.checkAll = false;\n            }\n        }\n    }\n};\n</script>\n"]}]}