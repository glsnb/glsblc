{"remainingRequest":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/fields/fieldCascader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/fields/fieldCascader.vue","mtime":1576581289804},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js","mtime":1575878134225},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js","mtime":1576575752870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBnZXRPcHRpb25zIGZyb20gJy4uL21peGlucy9nZXRPcHRpb25zJzsKZXhwb3J0IGRlZmF1bHQgewogICAgaW5qZWN0OiBbJ2Zvcm0nXSwKICAgIG1peGluczogW2dldE9wdGlvbnNdLAogICAgcHJvcHM6IHsKICAgICAgICBmaWVsZDogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgfSwKICAgICAgICBzaXplOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiAnZGVmYXVsdCc7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgICAgICAgIG9wdGlvbnM6IFtdCiAgICAgICAgfTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIHJlbW90ZSgpIHsKICAgICAgICAgICAgcmV0dXJuICEhdGhpcy5maWVsZC5hcGk7CiAgICAgICAgfSwKICAgICAgICBmaWx0ZXJhYmxlKCkgewogICAgICAgICAgICByZXR1cm4gISF0aGlzLmZpZWxkLmFwaSB8fCB0aGlzLmZpZWxkLmZpbHRlcmFibGU7CiAgICAgICAgfSwKICAgICAgICBjb21wdXRlZE9wdGlvbnMoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMubGVuZ3RoID4gMCA/IHRoaXMub3B0aW9ucyA6ICh0aGlzLmZpZWxkLm9wdGlvbnMgfHwgdGhpcy5maWVsZC5kYXRhKTsKICAgICAgICB9LAogICAgICAgIGNoYW5nZU9uU2VsZWN0KCkgewogICAgICAgICAgICBpZiAodGhpcy5maWVsZC5jaGFuZ2VUeXBlID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdGhpcy5maWVsZC5jaGFuZ2VUeXBlICE9PSAnYWxsJzsKICAgICAgICB9CiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgICBoYW5kbGVDaGFuZ2UodmFsdWUpIHsKICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMuZm9ybS5tb2RlbCwgdGhpcy5maWVsZC5tb2RlbCwgdmFsdWUpOwogICAgICAgICAgICB0aGlzLiRlbWl0KCdvbi1jaGFuZ2UnLCB0aGlzLmZpZWxkLm1vZGVsLCB2YWx1ZSwgbnVsbCwgdGhpcy5maWVsZCk7CiAgICAgICAgfQogICAgfQp9Owo="},{"version":3,"sources":["fieldCascader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fieldCascader.vue","sourceRoot":"node_modules/form-generator-iview/src/fields","sourcesContent":["<template>\n    <Cascader\n        :value=\"form.model[field.model]\"\n        :data=\"computedOptions\"\n        :disabled=\"field.disabled\"\n        :clearable=\"field.clearable\"\n        :placeholder=\"field.placeholder\"\n        :filterable=\"true\"\n        :change-on-select=\"changeOnSelect\"\n        :size=\"size\"\n        @on-change=\"handleChange\"\n    />\n</template>\n<script>\nimport getOptions from '../mixins/getOptions';\nexport default {\n    inject: ['form'],\n    mixins: [getOptions],\n    props: {\n        field: {\n            type: Object,\n            required: true\n        },\n        size: {\n            type: String,\n            default() {\n                return 'default';\n            }\n        },\n    },\n    data() {\n        return {\n            loading: false,\n            options: []\n        };\n    },\n    computed: {\n        remote() {\n            return !!this.field.api;\n        },\n        filterable() {\n            return !!this.field.api || this.field.filterable;\n        },\n        computedOptions() {\n            return this.options.length > 0 ? this.options : (this.field.options || this.field.data);\n        },\n        changeOnSelect() {\n            if (this.field.changeType === undefined) {\n                return false;\n            }\n            return this.field.changeType !== 'all';\n        }\n    },\n\n    methods: {\n        handleChange(value) {\n            this.$set(this.form.model, this.field.model, value);\n            this.$emit('on-change', this.field.model, value, null, this.field);\n        }\n    }\n};\n</script>\n"]}]}