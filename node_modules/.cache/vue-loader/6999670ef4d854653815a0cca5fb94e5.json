{"remainingRequest":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/data-vis-iview/src/charts/chartTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/data-vis-iview/src/charts/chartTable.vue","mtime":1576069822427},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/thread-loader/dist/cjs.js","mtime":1575878146703},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/babel-loader/lib/index.js","mtime":1575878134225},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js","mtime":1576575752870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["chartTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"chartTable.vue","sourceRoot":"node_modules/data-vis-iview/src/charts","sourcesContent":["<template>\n    <div\n        v-if=\"loading\"\n        :class=\"[loadingClasses, classes]\"\n    >\n        <Spin\n            :class=\"spinClasses\"\n            size=\"large\"\n        />\n    </div>\n    <div\n        v-else\n        :class=\"classes\"\n    >\n        <h3 :class=\"headerClasses\">\n            <Button\n                v-if=\"customColumns.length > 0\"\n                size=\"small\"\n                type=\"primary\"\n                @click=\"handleCustomColumnsClick\"\n            >\n                自定义列\n            </Button>\n            <Button\n                v-if=\"downloadAble\"\n                size=\"small\"\n                type=\"primary\"\n                @click=\"handleDownloadClick\"\n            >\n                下载数据\n            </Button>\n        </h3>\n        <Table\n            ref=\"table\"\n            stripe\n            size=\"small\"\n            :class=\"contentClasses\"\n            :columns=\"displayColumns\"\n            :data=\"displayData\"\n            :loading=\"loading\"\n            @on-sort-change=\"handleSortChange\"\n        />\n        <Page\n            :current=\"pageNum\"\n            :class=\"pageClasses\"\n            :page-size=\"pageSize\"\n            :page-size-opts=\"[10, 20, 30, 40]\"\n            :total=\"total\"\n            :show-elevator=\"showElevator\"\n            :show-sizer=\"showSizer\"\n            show-total\n            size=\"small\"\n            @on-change=\"handlePageChange\"\n            @on-page-size-change=\"handlePageSizeChange\"\n        />\n        <Modal\n            v-if=\"customColumns.length > 0\"\n            v-model=\"showModal\"\n            title=\"请选择要展示的列\"\n            footer-hide\n        >\n            <CheckboxGroup\n                :value=\"selectedCustomColumns\"\n                @on-change=\"handleCustomColumnsChange\"\n            >\n                <Checkbox\n                    v-for=\"option in customColumnsOptions\"\n                    :key=\"option.key\"\n                    :label=\"option.key\"\n                >\n                    {{ option.title }}\n                </Checkbox>\n            </CheckboxGroup>\n        </Modal>\n    </div>\n</template>\n<script>\nimport dataGetter from '../mixins/dataGetter';\nimport {classPrifix} from '../utils/const';\nimport {xlsDownload} from '../utils/download';\nimport {addCommas, isNumber, calculateTableCellWidth} from '../utils/utils';\nimport expandRow from './expandRow.vue';\nexport default {\n    name: 'ChartTable',\n    mixins: [dataGetter],\n    props: {\n        chart: {\n            type: Object,\n            default() {\n                return {};\n            }\n        }\n    },\n\n    data () {\n        return {\n            chartData: [],\n            chartColumns: [],\n            // maxWidth: 100,\n            showModal: false,\n            selectedCustomColumns: [],\n            remoteTotal: 0,\n            pageSize: 10,\n            pageNum: 1,\n            loading: false,\n            elWidth: 0,\n            sort: {},\n            remotePage: {\n                pageSize: 10,\n                pageNum: 1\n            }\n        };\n    },\n    computed: {\n        classes() {\n            return [\n                `${classPrifix}-chart`,\n                `${classPrifix}-chart-table`\n            ];\n        },\n        headerClasses() {\n            return `${classPrifix}-chart-table-header`;\n        },\n        contentClasses() {\n            return `${classPrifix}-chart-table-content`;\n        },\n        pageClasses() {\n            return `${classPrifix}-chart-table-page`;\n        },\n        showSizer() {\n            return this.chart.hideSizer === undefined ? true : !this.chart.hideSizer;\n        },\n        showElevator() {\n            return this.chart.hideElevator === undefined ? true : !this.chart.hideElevator;\n        },\n        downloadAble() {\n            if (this.chart.downloadAble === undefined) {\n                return true;\n            }\n            return this.chart.downloadAble;\n        },\n        columns() {\n            let chartColumns = this.chartColumns || [];\n            let columns = this.chart.columns || [];\n            return chartColumns.length > 0 ? chartColumns : columns;\n        },\n        data() {\n            let data = this.chart.api ? this.chartData : this.chart.data;\n            let sort = this.sort || {};\n            if (sort.key) {\n                let {key, order} = sort;\n                data = data.sort((a, b) => {\n                    if (order === 'desc') {\n                        return b[key] - a[key];\n                    }\n                    else if (order === 'asc') {\n                        return a[key] - b[key];\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n            }\n            return data;\n        },\n        total() {\n            if (this.remoteTotal) {\n                return this.remoteTotal;\n            }\n            return this.data.length;\n        },\n        queryParams () {\n            let params = {\n                ...this.remotePage\n            };\n            // let sort = this.sort;\n            // if (sort.key) {\n            //     params.sort = {\n            //         [sort.key]: sort.order\n            //     };\n            // }\n            return params;\n        },\n        isRemotePage() {\n            return this.remoteTotal > 0;\n        },\n        customColumns() {\n            return this.chart.customColumns || [];\n        },\n        customColumnsOptions() {\n            return this.columns.filter(item => this.customColumns.includes(item.key)) || [];\n        },\n        displayData() {\n            if (this.isRemotePage) {\n                return this.data;\n            }\n            return this.data.slice((this.pageNum - 1) * this.pageSize, (this.pageNum) * this.pageSize);\n        },\n        headerColumnsWidth() {\n            let widths = {};\n            this.columns.forEach(item => {\n                widths[item.key] = calculateTableCellWidth(item.title);\n            });\n            return widths;\n        },\n        columnsWidth() {\n            let widths = this.headerColumnsWidth || {};\n            this.displayData.forEach((item = {}) => {\n                Object.keys(item).forEach(fieldName => {\n                    if (!widths[fieldName]) {\n                        widths[fieldName] = 80;\n                    }\n                    const width = calculateTableCellWidth(item[fieldName]);\n                    widths[fieldName] = Math.max(widths[fieldName], width);\n                });\n            });\n            return widths;\n        },\n        isExpand() {\n            return this.displayData.find(item => {\n                if (!Array.isArray(item.children)) {\n                    return false;\n                }\n                return item.children.length > 0;\n            });\n        },\n        displayColumns() {\n            let selectedCustomColumns = this.selectedCustomColumns;\n            let customColumns = this.customColumns;\n            let columns = this.columns.filter(\n                item => !customColumns.includes(item.key)\n                || selectedCustomColumns.includes(item.key)\n            ).slice();\n            let columnsWidth = this.columnsWidth || {};\n            let expandWidth = this.isExpand ? 30 : 0;\n            let totalWidth = columns.map(item => columnsWidth[item.key]).reduce(function(prev,cur){\n                return prev + cur;\n            },0) + expandWidth;\n\n            let sort = this.sort || {};\n\n            columns = columns.map(item => {\n                if (item.type === 'expand') {\n                    return item;\n                }\n                item.width = this.elWidth < totalWidth\n                    ? columnsWidth[item.key]\n                    : (this.elWidth / Object.keys(columnsWidth).length) < columnsWidth[item.key] ? columnsWidth[item.key] : 'auto';\n                // 如果是远程排序，则需要展示排序信息\n                if (sort.key && sort.key === item.key) {\n                    item.sortType = sort.order || 'normal';\n                }\n                else {\n                    item.sortType = 'normal';\n                }\n                item.render = (h, params) => {\n                    const key = params.column.key;\n                    let value = params.row[key];\n                    let text = value;\n                    // 如果是整数\n                    if (isNumber(value)) {\n                        text = addCommas(value.toString());\n                    }\n\n                    // 如果有单位\n                    if (item.unit) {\n                        text = text + '' + params.column.unit;\n                    }\n\n                    // 如果为null, 则显示 '-', 不加单位\n                    if (value === null) {\n                        text = '-';\n                    }\n                    return h('span', {}, text);\n                };\n                return item;\n            });\n\n\n            // 增加扩展列\n            if (this.isExpand) {\n                columns.unshift({\n                    width: expandWidth,\n                    type: 'expand',\n                    render: (h, params) => {\n                        return h(expandRow, {\n                            props: {\n                                row: params.row,\n                                data: params.row.children,\n                                columns: columns.slice()\n                            }\n                        });\n                    }\n                });\n            }\n            return columns;\n        },\n    },\n\n    watch: {\n        chartColumns(val) {\n            if (val.length === 0) {\n                return;\n            }\n            this.selectedCustomColumns = this.columns.filter(item => item.defaultShow !== false).map(item => item.key);\n        }\n    },\n\n    mounted() {\n        this.elWidth = parseInt(window.getComputedStyle(this.$el).width);\n        this.selectedCustomColumns = this.columns.filter(item => item.defaultShow !== false).map(item => item.key);\n        this.$watch('chart', () => {\n            this.$nextTick(() => {\n                this.chartData = [];\n                this.chartColumns = [];\n                this.remoteTotal = 0;\n            });\n        });\n    },\n    methods: {\n        getDataFinished() {},\n        handleCustomColumnsClick() {\n            this.showModal = true;\n        },\n        handlePageChange(pageNum) {\n            this.pageNum = pageNum;\n            if (this.isRemotePage) {\n                this.remotePage = {\n                    ...this.remotePage,\n                    pageNum\n                };\n            }\n        },\n        handlePageSizeChange(pageSize) {\n            this.pageSize = pageSize;\n            if (this.isRemotePage) {\n                this.page = {\n                    ...this.page,\n                    pageSize\n                };\n            }\n        },\n        handleDownloadClick() {\n            if (this.chart.downLoadApi) {\n                window.open(this.chart.downLoadApi);\n            }\n            else {\n                // download local data\n                const header = this.columns.map(item => item.title);\n                const data = [\n                    header,\n                    ...this.data.map(item => {\n                        return this.columns.map(field => item[field.key]);\n                    })\n                ];\n                xlsDownload(data, this.chart.label);\n            }\n        },\n        handleSortChange({key, order}) {\n            this.sort = {\n                key,\n                order\n            };\n        },\n\n        handleCustomColumnsChange(val) {\n            this.selectedCustomColumns = val;\n        }\n    }\n};\n</script>\n"]}]}