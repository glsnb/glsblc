{"remainingRequest":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/formGenerator.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/form-generator-iview/src/formGenerator.vue","mtime":1576581289804},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/css-loader/dist/cjs.js","mtime":1576575751733},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1576575752870},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/postcss-loader/src/index.js","mtime":1575878146620},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/less-loader/dist/cjs.js","mtime":1575878151726},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/cache-loader/dist/cjs.js","mtime":1576575745336},{"path":"/Users/apple/github/glsnb/glsblc/glsblc/node_modules/vue-loader/lib/index.js","mtime":1576575752870}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mb3JtLWdlbmVyYXRvciB7CiAgICAuaXZ1LWRpdmlkZXIgewogICAgICAgIG1hcmdpbjogMTBweCBhdXRvCiAgICB9Cn0KCg=="},{"version":3,"sources":["formGenerator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2XA;AACA;AACA;AACA;AACA","file":"formGenerator.vue","sourceRoot":"node_modules/form-generator-iview/src","sourcesContent":["<template>\n    <div :class=\"classes\">\n        <h3\n            v-if=\"options.title || tip.title\"\n            :class=\"headerClasses\"\n        >\n            <span :class=\"headerTextClasses\">{{ options.title }}</span>\n            <Poptip\n                v-if=\"tip.title\"\n                :class=\"tipsClasses\"\n                :title=\"tip.title\"\n                placement=\"left-start\"\n            >\n                <Icon type=\"md-help-circle\" />\n                <div slot=\"content\">\n                    <p v-html=\"tip.content\" />\n                </div>\n            </Poptip>\n        </h3>\n        <Divider\n            v-if=\"options.title || tip.title\"\n            dashed\n            size=\"small\"\n        />\n        <Form\n            ref=\"form\"\n            :model=\"model\"\n            :label-width=\"options | labelWidth\"\n            :inline=\"options.inline\"\n            :label-position=\"options.labelPosition || 'right'\"\n        >\n            <div :class=\"defaultItemsBoxClassess\">\n                <FieldGenerator\n                    v-for=\"field in displayFields\"\n                    :key=\"field.model\"\n                    :field=\"field\"\n                    :api-base=\"apiBase\"\n                    :size=\"options.size\"\n                    :item-width=\"options.itemWidth\"\n                    :inline=\"options.inline\"\n                    :request-interceptor=\"requestInterceptor\"\n                    @on-field-change=\"handleFieldChange\"\n                    @on-submit=\"handleSubmit\"\n                    @on-reset=\"handleReset\"\n                    @on-button-event=\"handleButtonEvent($event)\"\n                />\n            </div>\n\n            <div\n                v-if=\"extraType === 'right' && computedFields.defaultHideFields.length > 0\"\n                :class=\"extraSelectBoxRightClasses\"\n            >\n                <Button\n                    type=\"info\"\n                    size=\"small\"\n                    @click=\"handleExtraBtnClick\"\n                >更多\n                    <Icon\n                        v-if=\"isShowExtra\"\n                        type=\"ios-arrow-down\"\n                    />\n                    <Icon\n                        v-if=\"!isShowExtra\"\n                        type=\"ios-arrow-forward\"\n                    />\n                </Button>\n                <div\n                    v-if=\"isShowExtra\"\n                    v-click-outside=\"handleExtraSelectRightContentClickOutside\"\n                    :class=\"extraSelectRightContentClasses\"\n                >\n                    <CheckboxGroup\n                        v-model=\"selectedDefaultHideFields\"\n                        size=\"small\"\n                        placeholder=\"请选择更多条件\"\n                        multiple\n                        filterable\n                    >\n                        <Checkbox\n                            v-for=\"item in computedFields.defaultHideFields\"\n                            :key=\"item.model\"\n                            :label=\"item.model\"\n                        >{{ item.label }}</Checkbox>\n                    </CheckboxGroup>\n                </div>\n            </div>\n            <div\n                v-if=\"extraType === 'bottom' && computedFields.defaultHideFields.length > 0\"\n                :class=\"extraSelectBoxClasses\"\n            >\n                <Row :class=\"moreDividerClasses\">\n                    <iCol span=\"10\">\n                        <Divider\n                            dashed\n                            size=\"small\"\n                        />\n                    </iCol>\n                    <iCol\n                        span=\"4\"\n                        :class=\"extraBtnBoxClasses\"\n                    >\n                        <Icon type=\"ios-arrow-back\" />\n                        更多选项\n                        <Icon type=\"ios-arrow-forward\" />\n                    </iCol>\n                    <iCol span=\"10\">\n                        <Divider\n                            dashed\n                            size=\"small\"\n                        />\n                    </iCol>\n                </Row>\n                <Select\n                    v-model=\"selectedDefaultHideFields\"\n                    size=\"small\"\n                    placeholder=\"请选择更多条件\"\n                    multiple\n                    filterable\n                >\n                    <Option\n                        v-for=\"item in computedFields.defaultHideFields\"\n                        :key=\"item.model\"\n                        :value=\"item.model\"\n                    >{{ item.label }}</Option>\n                </Select>\n            </div>\n        </Form>\n    </div>\n</template>\n<script>\nimport FieldGenerator from './fieldGenerator';\nimport {classPrifix} from './utils/const';\nimport vClickOutside from 'v-click-outside';\nimport {getValidType} from './utils/getValidType';\nexport default {\n    name: 'FormGenerator',\n    components: {\n        FieldGenerator\n    },\n    directives: {\n        clickOutside: vClickOutside.directive\n    },\n    filters: {\n        labelWidth(options) {\n            if (options.inline) {\n                return options.labelWidth;\n            }\n            else {\n                return options.labelWidth || 80;\n            }\n        }\n    },\n    props: {\n        requestInterceptor: {\n            type: [Function, null],\n            default: null\n        },\n        fields: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        },\n        model: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            }\n        },\n        options: {\n            type: Object,\n            default() {\n                return {};\n            }\n        }\n    },\n    data () {\n        return {\n            isShowExtra: false,\n            selectedDefaultHideFields: []\n        };\n    },\n\n    computed: {\n        classes() {\n            return classPrifix;\n        },\n        headerClasses() {\n            return `${classPrifix}-header`;\n        },\n        headerTextClasses() {\n            return `${classPrifix}-header-text`;\n        },\n        tipsClasses() {\n            return `${classPrifix}-tip`;\n        },\n        defaultItemsBoxClassess() {\n            return [\n                `${classPrifix}-default-items-box`,\n                {\n                    [`${classPrifix}-default-items-box-no-right`]: this.computedFields.defaultHideFields.length === 0,\n                }\n            ];\n        },\n        moreDividerClasses() {\n            return `${classPrifix}-more-divider-box`;\n        },\n        extraItemsBoxClassess() {\n            return `${classPrifix}-extra-items-box`;\n        },\n        extraSelectBoxRightClasses() {\n            return `${classPrifix}-extra-box-right`;\n        },\n        extraSelectRightContentClasses() {\n            return `${classPrifix}-extra-right-content`;\n        },\n        extraBtnBoxClasses() {\n            return `${classPrifix}-extra-box`;\n        },\n        labelLeftClasses() {\n            return `${classPrifix}-extra-left`;\n        },\n        extraSelectBoxClasses() {\n            return `${classPrifix}-extra-select-box`;\n        },\n        tip() {\n            return {\n                title: this.options.tip && this.options.tip.title,\n                content: this.options.tip && this.options.tip.content,\n            };\n        },\n        apiBase() {\n            return this.options.apiBase || '';\n        },\n        extraType() {\n            return this.options.extraType || 'right';\n        },\n        computedFields() {\n            let fields = this.fields || [];\n            let defaultShowFields = [];\n            let defaultHideFields = [];\n            fields.forEach(field => {\n                if (!field.defaultHide) {\n                    defaultShowFields.push(field);\n                }\n                else {\n                    defaultHideFields.push(field);\n                }\n            });\n            return {\n                defaultShowFields,\n                defaultHideFields\n            };\n        },\n        displayFields() {\n            return [\n                ...this.computedFields.defaultShowFields,\n                ...this.computedFields.defaultHideFields.filter(\n                    item => this.selectedDefaultHideFields.includes(item.model)\n                )\n            ];\n        },\n        // 根据apiParams计算出某字段更改后，受影响的字段有哪些\n        needResetFieldsOnChangeMap() {\n            let fields = this.fields || [];\n            let map = {};\n            fields.forEach(field => {\n                let apiParams = field.apiParams || [];\n                if (apiParams.length > 0) {\n                    apiParams.forEach(param => {\n                        if (!map[param]) {\n                            map[param] = [];\n                        }\n                        map[param].push(field);\n                    });\n                }\n            });\n            return map;\n        }\n\n    },\n    // watch: {\n    //     model: {\n    //         handler: function (val) {\n    //             this.formModel = val;\n    //         },\n    //         deep: true\n    //     }\n    // },\n    methods: {\n        handleFieldChange(model, value){\n            // 关联项需要清空\n            let needResetFields = this.needResetFieldsOnChangeMap[model] || [];\n            needResetFields.forEach(field => {\n                this.resetField(field);\n            });\n            this.$refs.form.validateField(model);\n            this.$emit('on-field-change', model, value);\n        },\n\n        handleSubmit() {\n            this.submit().then(model => {\n                // eslint-disable-next-line no-console\n                console.log('model', model);\n            }).catch(err => {\n                // eslint-disable-next-line no-console\n                console.log('err', err);\n            });\n            this.$emit('on-submit');\n        },\n\n        submit() {\n            return new Promise((resolve, reject) => {\n                try {\n                    this.$refs.form.validate().then(valid => {\n                        if (valid) {\n                            resolve(this.model);\n                        }\n                        else {\n                            reject(valid);\n                        }\n                    }).catch(err => {\n                        reject(err);\n                    });\n                }\n                catch(err) {\n                    // eslint-disable-next-line no-console\n                    console.log(err);\n                    reject(err);\n                }\n\n            });\n        },\n\n        handleReset() {\n            // TODO still has problem\n            // this.$refs.form.resetFields();\n            this.reset();\n        },\n\n        reset() {\n            this.fields.forEach(field => {\n                this.resetField(field);\n            });\n        },\n\n        resetField(field) {\n            let typeToResetValues = {\n                string: '',\n                array: [],\n                object: {},\n                number: 0\n            };\n\n            // If type of field is string, it's the model identify of\n            if (typeof field === 'string') {\n                field = this.fields.find(item => item.model === field);\n            }\n            let type = getValidType(field);\n            // console.log(type, field.model, typeToResetValues[type]);\n            this.$set(this.model, field.model, typeToResetValues[type]);\n        },\n\n        handleButtonEvent($event) {\n            this.$emit('on-button-event', $event);\n        },\n\n        handleExtraBtnClick() {\n            this.isShowExtra = !this.isShowExtra;\n        },\n        handleExtraSelectRightContentClickOutside() {\n            this.isShowExtra = !this.isShowExtra;\n        },\n    }\n};\n</script>\n<style lang=\"less\">\n.form-generator {\n    .ivu-divider {\n        margin: 10px auto\n    }\n}\n\n</style>\n"]}]}